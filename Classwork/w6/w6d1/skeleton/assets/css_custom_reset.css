html, body, div, span, h1, h2, h3, h4, a, ol, ul, li, form, label, article, aside, figure, figcaption, footer, header, nav {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

body {
  line-height: 1.5;
}

ol, ul {
  list-style: none;
}

input[type="radio"], select, input[type="submit"] {
  cursor: pointer;
  outline: none;
}

h2 + .user_review {
  border-top: 1px solid black;
}

/* This is useful when implementing a grid system so that all image elements
will take up 100% width of their containers */
img {
  width: 100%,

}

header img {
  float: left;
}

nav {
  float: right;
}

header img::after {
    content: ""; /* Empty content string */
    display: block; /* Only block elements can clear */
    clear: both;
}

/*Instead of making the nav into an inline-block element, use float to put our nav in the top-right.
Just for fun, float the logo to the left and then clear-fix the vertical collapse problem.
Replace the fixed pixel widths of our aside and main content section with a 
fluid grid system similar to those seen in the CSS Grid System video. 
Create a css file calledcustom_grid.css and add these changes to that file. 
Note that this will require updating index.html with respective container class names.
You may need to give your recipe image a width of 100% so it expands to fit the entire figure 
and does not default to its natural fixed pixel width. Do this for all images by applying it to 
custom_reset.css.*/


